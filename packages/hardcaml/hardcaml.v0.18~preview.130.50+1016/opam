opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/hardcaml"
bug-reports: "https://github.com/janestreet/hardcaml/issues"
dev-repo: "git+https://github.com/janestreet/hardcaml.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/hardcaml/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"             {>= "5.1.0"}
  "base"              {= "v0.18~preview.130.50+1016"}
  "bignum"            {= "v0.18~preview.130.50+1016"}
  "bin_prot"          {= "v0.18~preview.130.50+1016"}
  "core"              {= "v0.18~preview.130.50+1016"}
  "core_kernel"       {= "v0.18~preview.130.50+1016"}
  "jane_rope"         {= "v0.18~preview.130.50+1016"}
  "ppx_compare"       {= "v0.18~preview.130.50+1016"}
  "ppx_jane"          {= "v0.18~preview.130.50+1016"}
  "ppx_rope"          {= "v0.18~preview.130.50+1016"}
  "ppx_sexp_conv"     {= "v0.18~preview.130.50+1016"}
  "sexplib"           {= "v0.18~preview.130.50+1016"}
  "splittable_random" {= "v0.18~preview.130.50+1016"}
  "stdio"             {= "v0.18~preview.130.50+1016"}
  "dune"              {>= "3.17.0"}
  "ppxlib"            {>= "0.33.0" & < "0.36.0"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis: "RTL Hardware Design in OCaml"
description: """
Hardcaml is an embedded DSL for designing and simulating hardware in OCaml.
Generic hardware designs are easily expressed using features such as higher
order functions, lists, maps etc.  A built in simulator allows designs to
be simulated within Hardcaml.  Designs are converted to either Verilog or
VHDL to interact with standard back end tooling.
"""
url {
  src:
    "https://github.com/janestreet/hardcaml/archive/23d2a091c5515e3225bdc68dc387e3a87daf562d.tar.gz"
  checksum:
    "sha256=d7a87583cb1aca2506395a8ea2fb57a374ee0354087ca241bef7adfd47752238"
}
