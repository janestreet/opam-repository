opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/async_rpc_websocket"
bug-reports: "https://github.com/janestreet/async_rpc_websocket/issues"
dev-repo: "git+https://github.com/janestreet/async_rpc_websocket.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/async_rpc_websocket/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"                  {>= "5.1.0"}
  "async"                  {= "v0.18~preview.130.26+1192"}
  "async_rpc_kernel"       {= "v0.18~preview.130.26+1192"}
  "async_websocket"        {= "v0.18~preview.130.26+1192"}
  "cohttp_async_websocket" {= "v0.18~preview.130.26+1192"}
  "core"                   {= "v0.18~preview.130.26+1192"}
  "ppx_jane"               {= "v0.18~preview.130.26+1192"}
  "cohttp"                 {>= "2.5.6"}
  "cohttp-async"           {>= "2.5.7" & < "3.0.0" | >= "5.1.1" & < "6.0.0"}
  "conduit-async"
  "dune"                   {>= "3.17.0"}
  "uri"                    {>= "3.0.0"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis: "Library to serve and dispatch Async RPCs over websockets"
description: "
Library to serve and dispatch Async RPCs over websockets.

Rpc_websocket makes it easy to serve and send Async RPCs with
HTTP+Websocket underlying the transport. It also provides a mechanism to share the
RPC implementations between a vanilla TCP server and a HTTP server.

On the server side, the library detects when a websocket connection
is established, and routes to an optionally provided vanilla HTTP handler
when non-websocket traffic occurs.
"
url {
src: "https://github.com/janestreet/async_rpc_websocket/archive/94eddec4f15303ccabe97e96b978e5fdaa5bb0c9.tar.gz"
checksum: "sha256=1b7330626c0f6f2bc325e0d3a8f5ef791f471c22f485bc7403536fac0e71015f"
}
