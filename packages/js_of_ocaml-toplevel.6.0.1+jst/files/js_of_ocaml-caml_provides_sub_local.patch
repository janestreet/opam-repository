--- a/runtime/js/array.js
+++ b/runtime/js/array.js
@@ -27,5 +27,11 @@
   return a2;
 }
+
+//Provides: caml_array_sub_local mutable
+//Requires: caml_array_sub
+function caml_array_sub_local(a, i, len) {
+  return caml_array_sub(a, i, len);
+}

 //Provides: caml_array_append mutable
 function caml_array_append(a1, a2) {
--- a/runtime/wasm/array.wat
+++ b/runtime/wasm/array.wat
@@ -61,7 +61,8 @@
          (struct.get $float 0 (ref.cast (ref $float) (local.get $v))))
       (ref.i31 (i32.const 0)))

-   (func (export "caml_array_sub")
+   (export "caml_array_sub_local" (func $caml_array_sub))
+   (func $caml_array_sub (export "caml_array_sub")
       (param $a (ref eq)) (param $i (ref eq)) (param $vlen (ref eq))
       (result (ref eq))
       (local $a1 (ref $block)) (local $a2 (ref $block)) (local $len i32)
