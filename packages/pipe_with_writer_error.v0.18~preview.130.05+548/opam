opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/pipe_with_writer_error"
bug-reports: "https://github.com/janestreet/pipe_with_writer_error/issues"
dev-repo: "git+https://github.com/janestreet/pipe_with_writer_error.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/pipe_with_writer_error/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"        {>= "5.1.0"}
  "async_kernel" {= "v0.18~preview.130.05+548"}
  "core"         {= "v0.18~preview.130.05+548"}
  "ppx_jane"     {= "v0.18~preview.130.05+548"}
  "dune"         {>= "3.11.0"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis: "Pipe that forces readers to consider errors from writers while reading"
description: "
`Pipe_with_writer_error.t` abstracts the read end of a pipe and a
`Deferred.Result.t` that indicates writer failure, and forces readers to
consider errors from writers when reading. The implicit thesis is that if
readers encounter errors, writers should not care what the error is or fail on
the error themselves - it is the reader's responsibility to handle that error.
The only questions the writer needs to consider is (1) what to do if the reader
closes its end (regardless of why it opted to do so) and (2) what to do if the
reader leaves its end open and fails to consume data (regardless of why it fails
to do so). The writer can choose how it wants to handle these cases with the
variety of write functions (namely, `write`, `write_when_ready`,
`write_if_open`, `write_without_pushback`, and
`write_without_pushback_if_open`).
"
url {
src: "https://github.com/janestreet/pipe_with_writer_error/archive/5c3d4a746db76eacc23b0c090b63b073af989db3.tar.gz"
checksum: "sha256=47ee2f4afeda515ac8052d0ef4812c361d18199a7fc62aaaf3912643bc9730f8"
}
