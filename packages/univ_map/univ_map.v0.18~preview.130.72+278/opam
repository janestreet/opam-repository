opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/univ_map"
bug-reports: "https://github.com/janestreet/univ_map/issues"
dev-repo: "git+https://github.com/janestreet/univ_map.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/univ_map/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"            {>= "5.1.0"}
  "base"             {= "v0.18~preview.130.72+278"}
  "ppx_base"         {= "v0.18~preview.130.72+278"}
  "ppx_here"         {= "v0.18~preview.130.72+278"}
  "ppx_inline_test"  {= "v0.18~preview.130.72+278"}
  "ppx_sexp_message" {= "v0.18~preview.130.72+278"}
  "ppx_sexp_value"   {= "v0.18~preview.130.72+278"}
  "dune"             {>= "3.17.0"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis:
  "Universal/heterogeneous maps, useful for storing values of arbitrary type in a single map."
description: """
In order to recover a value, it must be looked up with exactly the [Key.t] it was
stored in. In other words, given different [Key.t]s from the same [string], one will
not be able to recover the key stored in the other one.

This is similar to [Univ] in spirit.
"""
url {
  src:
    "https://github.com/janestreet/univ_map/archive/dc575ad08f34de96373a954839845cb9981f24b6.tar.gz"
  checksum:
    "sha256=8c586aa5f13c441ef7b8f6c17ab59c43984b92dc0ac1a782fe89586504c99330"
}
